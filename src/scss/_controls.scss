@import "elements/element.html";
@import "elements/element.headline";
@import "elements/element.table";
@import "elements/element.quote";


@mixin controls($theme) {


  .lia-link {
    word-break: break-word;

    &:link {
      color: map-get($theme, primary);

      &:hover {
        color: lighten(map-get($theme, primary), 20%);
      }

      &:active {
        color: darken(map-get($theme, primary), 20%);
      }
    }

    &:visited {
      color: map-get($theme, secondary);

      &:hover {
        color: lighten(map-get($theme, secondary), 20%);
      }

      &:active {
        color: darken(map-get($theme, secondary), 20%);
      }
    }
  }

  .lia-code.lia-inline {
    $vert: map-get($global-spacing, spacing-smaller);
    $horiz: map-get($global-spacing, spacing-small);
    $bg: mix(map-get($theme, background), map-get($theme, primary), 80%);
    $fg: mix(map-get($theme, text), map-get($theme, background), 80%);
    $fg-inv: mix(map-get($theme, text-inv), map-get($theme, background), 80%);

    font-family: "Roboto Mono";
    background: $bg;
    color: color-contrast($bg, $fg, $fg-inv);
    border-bottom-left-radius: map-get($global-spacing, spacing-small);
    border-bottom-right-radius: map-get($global-spacing, spacing-small);
    padding: $vert $horiz;
    font-size: map-get($global-spacing, code-size);
    overflow-x: auto;
    margin: 0px;
    //transition: max-height 0.5s ease-out;
    white-space: pre-wrap;
    text-justify: none;
  }

  .lia-script {
    background: mix(map-get($theme, background), #888, 80%);
    padding: 2px 6px 2px 6px;
    border-radius: 10px;
  }

  .lia-script-with-border {
    background: mix(map-get($theme, background), #888, 80%);
    border: 1px solid map-get($theme, primary);
    padding: 2px 6px 2px 6px;
    border-radius: 10px;

    &:hover {
      border: 2px solid map-get($theme, primary);
      margin-left: -1px;
      margin-right: -1px;
    }
  }

  .lia-script-border {
    border: 1px solid map-get($theme, primary);
    padding: 2px 6px 2px 6px;
    border-radius: 10px;

    &:hover {
      border: 2px solid map-get($theme, primary);
      margin-left: -1px;
      margin-right: -1px;
    }
  }

  .headless {
    border-top-left-radius: map-get($global-spacing, spacing-small);
    border-top-right-radius: map-get($global-spacing, spacing-small);
  }

  .lia-code:not(.lia-inline) {
    $bg: mix(map-get($theme, background), map-get($theme, background-inv), 95%);

    font-family: "Roboto Mono";
    background: $bg;
    padding: map-get($global-spacing, spacing-normal);
    font-size: map-get($global-spacing, code-size);
    overflow-x: auto;
  }

  .lia-accordion {
    $bg: map-get($theme, primary);
    $fg: map-get($theme, background);
    $rd: map-get($global-spacing, spacing-small);

    background-color: $bg;
    color: $fg;
    cursor: pointer;
    padding: 6px;
    width: 100%;
    border: none;
    text-align: left;
    outline: none;
    font-size: 15px;
    border-top-left-radius: $rd;
    border-top-right-radius: $rd;
    font-family: "Roboto Mono";
    font-size: map-get($global-spacing, code-size);

    .lia-accordion-min-max {
      padding-right: 3px;
      padding-left: 3px;

      .active, &:hover {
        background-color: mix($bg, $fg, 50%);
      }
    }

    .active, &:hover {
      background-color: mix($bg, $fg, 80%);
    }
  }

  .lia-accordion-dummy {
    $bg: map-get($theme, primary);
    $fg: map-get($theme, background);
    $rd: map-get($global-spacing, spacing-small);

    background-color: $bg;
    color: $fg;
    cursor: auto;
    padding: 6px;
    width: 100%;
    border: none;
    text-align: left;
    outline: none;
    font-size: 15px;
    border-top-left-radius: $rd;
    border-top-right-radius: $rd;
    transition: 0.4s;
    font-family: "Roboto Mono";
    font-size: map-get($global-spacing, code-size);
  }

  .lia-code-stdout {
    font-family: "Roboto Mono";
    background: #111;
    color: #eee;
    padding: map-get($global-spacing, spacing-normal);
    margin-top: 0px;
    font-size: map-get($global-spacing, code-size);
    overflow-y: auto;
    max-height: 250px;
    border-radius: map-get($global-spacing, spacing-small);
    word-wrap: normal;
    word-break: keep-all;
    white-space: pre-wrap;
  }

  .lia-color {
    margin: 0px;
    padding: 0px;
    float: left;
    width: 100%;

    label {
      float: left;
      width: 91px;
      height: 34px;
      margin: 4px;
      background-color: #EFEFEF;
      border-radius: 4px;
      border: 0px;
      overflow: auto;

      box-shadow: 0 3px 1px -2px rgba(0, 0, 0, .2),
      0 2px 2px 0 rgba(0, 0, 0, .14),
      0 1px 5px 0 rgba(0, 0, 0, .12);

      span {
        text-align: center;
        padding: 8px 0px;
        display: block;
      }

      input {
        position: absolute;
        top: -9px;
      }

      &:hover {
        cursor: pointer;
        background: #404040;
        color: #F7F7F7;
      }

      &:active {
        box-shadow: -1px -1px 1px #fff;
      }
    }

    input:checked + span {
      background-color: #404040;
      color: #F7F7F7;
    }

    .default {
      background-color: #3f51b5;
      color: #333;
    }

    .amber {
      background-color: #FFC107;
      color: #333;
    }

    .blue {
      background-color: $color-blue-1;
      color: #fff;
    }

    .green {
      background-color: #4caf50;
      color: #333;
    }

    .gray {
      background-color: #607d8b;
      color: #333;
    }

    .purple {
      background-color: #673ab7;
      color: #333;
    }

    .turquoise {
      background-color: $color-turquoise-1;
      color: #fff;
    }

    .red {
      background-color: $color-red-1;
      color: #fff;
    }

    .yellow {
      background-color: $color-yellow-1;
      color: #fff;
    }
  }

  .lia-dropdown {
    padding: map-get($global-spacing, spacing-small);
    border-radius: 2px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);

    min-width: 70px;
    display: inline-block;
    cursor: pointer;
    border-width: 0.5px;
    border-style: solid;

    border-color: map-get($theme, primary);
  }

  .lia-dropdown-options {
    position: absolute;
    overflow: auto;
    transition: all 0.1s ease 0s;
    cursor: pointer;

    border-radius: 2px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);

    z-index: 1;
  }

  .lia-dropdown-option {
    //min-width: 70px;
    padding: map-get($global-spacing, spacing-small);

    min-width: 70px;
    border-width: 0.5px;
    border-style: solid;

    border-color: map-get($theme, primary);
    background-color: map-get($theme, background);
  }


  //.lia-tooltip {
  //  position: relative;
  //  display: inline-block;
  //
  //  .lia-tooltiptext {
  //    visibility: hidden;
  //    //width: 120px;
  //    background-color: black;
  //    color: #fff;
  //    text-align: left;
  //    border-radius: 6px;
  //    padding: 15px;
  //    /* Position the tooltip */
  //    position: absolute;
  //    z-index: 1;
  //    top: 100%;
  //    left: 50%;
  //    margin-left: -60px;
  //  }
  //
  //  &:hover .lia-tooltiptext {
  //    visibility: visible;
  //  }
  //}
  //
  //.lia-label {
  //  //white-space: nowrap;
  //  word-wrap: normal;
  //  word-break: keep-all;
  //  white-space: pre-wrap;
  //}
  //
  //.lia-textarea {
  //  width: 100%;
  //}

  .lia-btn,
  .lia-input,
  .lia-label,
  .lia-select {
    $vert: map-get($global-spacing, spacing-small);
    $marg: map-get($global-spacing, spacing-normal);
    padding: $vert 0;
    margin: $marg;
  }

  .lia-btn {
    $bg: map-get($theme, primary);
    $fg: color-contrast($bg);

    border: none;
    border-radius: map-get($global-spacing, spacing-smaller);
    outline: none;
    position: relative;
    overflow: hidden;
    transition: background 0.25s ease-in 0s;
    padding: 0 map-get($global-spacing, spacing-normal);
    line-height: 2em;

    &:not([disabled]) {
      background: $bg;
      color: $fg;
      box-shadow: 0 3px 1px -2px rgba(0, 0, 0, .2),
      0 2px 2px 0 rgba(0, 0, 0, .14),
      0 1px 5px 0 rgba(0, 0, 0, .12);

      &:hover {
        cursor: pointer;
        background: mix($bg, $fg, 80%);
      }
    }

    &[disabled] {
      $fg: color-contrast(map-get($theme, background));

      background: rgba($fg, .12);
      color: rgba($fg, .38);
    }

    &:active {
      box-shadow: -1px -1px 1px #fff;
    }

    .lia-ripple {
      position: absolute;
      display: block;
      border-radius: 50%;
      width: 0;
      height: 0;
      margin: 0;
      background: $fg;
      opacity: 0;
      transition-property: width, height, margin, opacity;
      transition-duration: 0.5s;
      transition-timing-function: ease-out;
      transition-delay: 0s;
    }

    &.lia-selected {
      box-shadow: -1px -1px 1px #000;
    }

    &.lia-success {
      $bg: map-get($theme, success);
      $fg: color-contrast($bg);

      background: $bg;
      color: $fg;

      &:hover {
        background: mix($bg, $fg, 80%);
      }

      .lia-ripple {
        background: $fg;
      }
    }

    &.lia-warning {
      $bg: map-get($theme, warning);
      $fg: color-contrast($bg);

      background: $bg;
      color: $fg;

      &:hover {
        background: mix($bg, $fg, 80%);
      }

      .lia-ripple {
        background: $fg;
      }
    }

    &.lia-failure {
      $bg: map-get($theme, error);
      $fg: color-contrast($bg);

      background: $bg;
      color: $fg;

      &:hover {
        background: mix($bg, $fg, 80%);
      }

      .lia-ripple {
        background: $fg;
      }
    }
  }

  .lia-labeled {
    @include flex(row, nowrap, flex-start, center, flex-start);
    margin-right: map-get($global-spacing, spacing-normal);

    & :first-child {
      margin-right: 0;
    }
  }

  .lia-input,
  .lia-textarea,
  .lia-select {
    $bg: map-get($theme, background);
    $fg: color-contrast($bg);

    background: $bg;
    border: none;
    outline: none;
    transition: border-bottom-color 0.5s ease-out 0s;

    &:not([disabled]) {
      color: $fg;
      border-bottom: 1.5px solid mix($bg, $fg, 50%);
    }

    &[disabled] {
      color: rgba($fg, .38);
      border-bottom: 1.5px dotted mix($bg, $fg, 50%);
    }

    &:focus {
      border-bottom-color: map-get($theme, primary);
    }
  }

  input[type='radio'] {
    $bg: map-get($theme, background);
    $fg: color-contrast($bg);
    $snd: map-get($theme, secondary);
    $outline: 2.5px;

    // hide the input but have it still be clickable
    opacity: 0;
    vertical-align: middle;
    position: absolute;
    width: calc(1em + #{$outline} * 2);
    height: calc(1em + #{$outline} * 2);
    margin-right: map-get($global-spacing, spacing-small);

    & + .lia-radio-btn {
      margin: $outline;
      clear: none;
      vertical-align: middle;
      display: inline-block;
      box-sizing: border-box;
      border-radius: 50%;
      border: 0.5em solid $bg;
      background: $bg;
      box-shadow: 0 0 0 $outline mix($bg, $fg, 50%);
      width: 1em;
      height: 1em;
      transition-property: background, box-shadow, border;
      transition-duration: 0.25s;
      transition-timing-function: ease-in;
    }

    &:not([disabled]):hover {
      cursor: pointer;
    }

    &:checked + .lia-radio-btn {
      box-shadow: 0 0 0 $outline $snd;
      background: $snd;
      border: 3px solid $bg;
    }

    &[disabled]:checked + .lia-radio-btn {
      $snd: rgba($fg, .38);

      box-shadow: 0 0 0 $outline $snd;
      background: $snd;
    }
  }

  input[type='checkbox'] {
    $bg: map-get($theme, background);
    $fg: color-contrast($bg);
    $snd: map-get($theme, secondary);
    $outline: 2.5px;

    // hide the input but have it still be clickable
    opacity: 0;
    vertical-align: middle;
    position: absolute;
    width: calc(1em + #{$outline} * 2);
    height: calc(1em + #{$outline} * 2);
    margin-right: map-get($global-spacing, spacing-small);

    & + .lia-check-btn {
      @include material-icon("", inherit);
      margin: $outline;
      clear: none;
      vertical-align: middle;
      font-weight: 600;
      overflow: hidden;
      box-sizing: border-box;
      border-radius: map-get($global-spacing, spacing-tiny);
      border: 0.5em solid $bg;
      box-shadow: 0 0 0 $outline mix($bg, $fg, 50%);
      width: 1em;
      height: 1em;
      background: $bg;
      color: color-contrast($snd);
      transition-property: background, box-shadow, border;
      transition-duration: 0.25s;
      transition-timing-function: ease-in;
    }

    &:not([disabled]):hover {
      cursor: pointer;
    }

    &:checked + .lia-check-btn {
      box-shadow: 0 0 0 $outline $snd;
      border: 0px solid $snd;
      background: $snd;
    }

    &[disabled]:checked + .lia-check-btn {
      $snd: rgba($fg, .38);

      box-shadow: 0 0 0 $outline $snd;
      border: 0px solid $snd;
      background: $snd;
    }
  }

  //.lia-hidden {
  //  display: none;
  //}

  @include table($theme);


  .lia-card {
    //margin: map-get($global-spacing, spacing-small);
    padding: map-get($global-spacing, spacing-normal);
    border-radius: 2px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);

    min-width: 80%;


    .lia-check-item,
    .lia-radio-item,
    .lia-survey-matrix {
      padding: map-get($global-spacing, spacing-normal);
    }

    display: inline-block;
  }

  .lia-survey-matrix {
    border-spacing: 0 map-get($global-spacing, spacing-large);

    :not(:first-child) {
      td:last-child {
        padding: map-get($global-spacing, spacing-normal) map-get($global-spacing, spacing-large);
      }

      td:not(:last-child) {
        $bg: map-get($theme, background);
        $fg: color-contrast($bg);
        background: mix($bg, $fg, 95%);
        padding: map-get($global-spacing, spacing-normal);
      }
    }

    :first-child td {
      padding: 0 map-get($global-spacing, spacing-normal);
    }
  }

  @include quote($theme);


  .lia-toolbar {
    $bg: map-get($theme, primary);
    $fg: color-contrast($bg);

    z-index: 1;
    flex: 0 0 auto;
    height: map-get($global-spacing, toolbar-height);
    background: $bg;
    color: $fg;

    .lia-btn {
      box-shadow: none;
      background: transparent;
      color: $fg;

      &:hover {
        background: mix(transparent, $fg, 80%);
      }

      .lia-ripple {
        background: $fg;
      }
    }

    .lia-input,
    .lia-select {
      background: $bg;
      border-bottom-color: mix($bg, $fg, 50%);

      &:not([disabled]) {
        color: $fg;
      }

      &[disabled] {
        color: rgba($fg, .38);
      }

      &:focus {
        border-bottom-color: $fg;
      }
    }

    .lia-left {
      order: 1;
    }

    .lia-spacer {
      order: 1;
      flex: 1 1 auto;
    }

    .lia-right {
      order: 2;
    }
  }
}
